-- 1
CREATE TABLE SDB_USER (
    USE_ID INT(3) NOT NULL AUTO_INCREMENT,
    USE_USER VARCHAR(64) CHARACTER SET utf8mb4,
    USE_EMAIL VARCHAR(64) CHARACTER SET utf8mb4,
    USE_PASSWORD VARCHAR(64) CHARACTER SET utf8mb4,
    CONSTRAINT PK_USE_ID PRIMARY KEY (USE_ID)
);
-- 2
CREATE TABLE SDB_CUSTOMER(
    CUS_ID INT (3) NOT NULL AUTO_INCREMENT,
    USE_ID INT (3),
    CUS_EMAIL VARCHAR(64),
    CUS_FIRST_NAME VARCHAR(64),
    CUS_MIDDLE_NAME VARCHAR(64),
    CUS_LAST_NAME VARCHAR(64),
    CUS_SECONDLAST_NAME VARCHAR(64),
    CUS_AFFILIATE INT (15),
    CONSTRAINT PK_CUS_ID PRIMARY KEY (CUS_ID),
    CONSTRAINT FK_USE_ID FOREIGN KEY (USE_ID) REFERENCES SDB_USER(USE_ID)
);
-- 3
CREATE TABLE SDB_ADDRESS(
    DIR_ID INT (3) NOT NULL AUTO_INCREMENT,
    CUS_ID INT (3),
    DIR_FIRST_LINE VARCHAR (30),
    DIR_SECOND_LINE VARCHAR (30),
    DIR_RESIDENTIARY VARCHAR(30),
    DIR_AVENUE VARCHAR (30),
    DIR_ZONE INT (5),
    DIR_CITY VARCHAR (30),
    DIR_STATE VARCHAR (30),
    CONSTRAINT PK_DIR_ID PRIMARY KEY (DIR_ID),
    CONSTRAINT FK_CUS_ID FOREIGN KEY (CUS_ID) REFERENCES SDB_CUSTOMER(CUS_ID)
);
-- 4
CREATE TABLE SDB_EMPLOYEE(
    EMP_ID INT (3),
    USE_ID INT (3),
    EMP_EMAIL VARCHAR(64),
    EMP_HIREDATE DATE,
    EMP_FIRST_NAME VARCHAR(64),
    EMP_MIDDLE_NAME VARCHAR(64),
    EMP_LAST_NAME VARCHAR(64),
    EMP_SECONDLAST_NAME VARCHAR(64),
    EMP_FIRST_LINE INT (5),
    EMP_SECOND_LINE INT (5),
    EMP_RESIDENTIARY VARCHAR(64),
    EMP_AVENUE VARCHAR (64),
    EMP_ZONE INT (5),
    EMP_CITY VARCHAR (64),
    EMP_STATE VARCHAR (64),
    CONSTRAINT PK_EMP_ID PRIMARY KEY (EMP_ID),
    CONSTRAINT FK_USEE_ID FOREIGN KEY (USE_ID) REFERENCES SDB_USER(USE_ID)
);
-- 5
Create Table SDB_SUPPLIER(
    SUP_ID INT(3) NOT NULL AUTO_INCREMENT,
    SUP_NIT INT(10), 
    SUP_SOCIAL_NAME Varchar(20),
    SUP_NAME Varchar(20),
    SUP_FIRST_LINE INT (5),
    SUP_SECOND_LINE INT (5),
    SUP_RESIDENTIARY VARCHAR(64),
    SUP_AVENUE VARCHAR (64),
    SUP_ZONE INT (5),
    SUP_CITY VARCHAR (64),
    SUP_STATE VARCHAR (64),
    Constraint PK_SUP_ID Primary Key (SUP_ID)
);

-- 6
CREATE TABLE SDB_PRODUCT (
    PRO_ID INT(3) NOT NULL AUTO_INCREMENT,
    PRO_NAME VARCHAR(20),
    PRO_MEASUREMENT INT(2),
    PRO_QUANTITY INT(5),
    PRO_VALUE DECIMAL(10,2),
    PRO_DESCRIPTION Varchar(30),
    Constraint PK_PRO_ID Primary Key (PRO_ID)
);

-- 7
/*
CREATE TEMPORARY TABLE SDB_CART (
    CAR_ID INT (3) NOT NULL AUTO_INCREMENT,
    PRO_ID INT(3) NOT NULL,
    CAR_NAME VARCHAR(20),
    CAR_MEASUREMENT INT(2),
    CAR_QUANTITY INT(5),
    CAR_VALUE DECIMAL(10, 2),
    CAR_DESCRIPTION VARCHAR(30),
    CONSTRAINT PK_CAR_ID PRIMARY KEY (CAR_ID),
    CONSTRAINT FK_PRO_ID FOREIGN KEY (PRO_ID) REFERENCES SDB_PRODUCT(PRO_ID)
)ENGINE=InnoDB;
*/

-- 8
Create Table SDB_PRODUCT_DETAIL(
    PRD_ID INT(3) NOT NULL AUTO_INCREMENT,
    PRO_ID INT(3),
    PRD_CATEGORY INT(2),
    PRD_CATEGORY_NAME Varchar(20),
    PRD_MINIMUM_STOCK INT(1),
    Constraint PK_PRD_ID Primary Key (PRD_ID),
    Constraint FK_PROP_ID Foreign Key (PRO_ID) References SDB_PRODUCT(PRO_ID)
);

-- 9
Create Table SDB_DEPARTURE(
    DEP_ID INT(3) NOT NULL AUTO_INCREMENT,
    DEP_OUTDATE Date,
    DEP_ACTION INT(1),
    PRO_ID INT(3),
    DEP_MEASUREMENT INT(2),
    DEP_QUANTITY INT(2),
    DEP_VALUE DECIMAL(10,2),
    CUS_ID INT(3),
    Constraint PK_DEP_ID Primary Key (DEP_ID),
    Constraint FK_PROD_ID Foreign Key (PRO_ID) References SDB_PRODUCT(PRO_ID),
    Constraint FK_CUSS_ID Foreign Key (CUS_ID) References SDB_CUSTOMER(CUS_ID)
);

-- 10
Create Table SDB_ENTRY(
    ENT_ID INT(3) NOT NULL AUTO_INCREMENT,
    ENT_ENTRYDATE Date,
    ENT_ACTION INT(1),
    PRO_ID INT(3),
    ENT_MEASUREMENT INT(2),
    ENT_QUANTITY INT(2),
    ENT_VALUE INT(3),
    SUP_ID INT(3),
    Constraint PK_ENT_ID Primary Key (ENT_ID),
    Constraint FK_PROE_ID Foreign Key (PRO_ID) References SDB_PRODUCT(PRO_ID),
    Constraint FK_SUPP_ID Foreign Key (SUP_ID) References SDB_SUPPLIER(SUP_ID)
);

-- 11
CREATE TABLE SDB_SERVICE(
    SER_ID INT(3) NOT NULL AUTO_INCREMENT,
    SER_SERVICENAME VARCHAR(1),
    SER_VALUE DECIMAL(10,2),
    CONSTRAINT PK_SER_ID PRIMARY KEY (SER_ID)
);

-- 12
Create Table SDB_ORDER(
    ORD_ID INT (3) NOT NULL AUTO_INCREMENT,
    ORD_ORDER_DATE TIMESTAMP(6),
    CUS_ID INT  (3),
    PRO_ID INT (3),
    SER_ID INT (3),
    ORD_QUANTITY INT (2),
    ORD_TOTAL DECIMAL (10,2),
    Constraint PK_ORD_ID Primary Key (ORD_ID),
    Constraint FK_PROO_ID Foreign Key (PRO_ID) References SDB_PRODUCT(PRO_ID),
    Constraint FK_SER_ID Foreign Key (SER_ID) References SDB_SERVICE(SER_ID),
    Constraint FK_CLIO_ID Foreign Key (CUS_ID) References SDB_CUSTOMER(CUS_ID)
);

-- 13
CREATE TABLE SDB_ORDER_DETAIL(
    ODE_ID INT(3) NOT NULL AUTO_INCREMENT,
    ORD_ID INT (3),
    ODE_DISCOUNT INT(1), -- 1,0 EL TRIGGER VERA LA LOGICA --
    ODE_SUB_TOTAL DECIMAL(10,2),
    CONSTRAINT PK_ODE_ID PRIMARY KEY (ODE_ID),
    CONSTRAINT FK_ORDO_ID FOREIGN KEY (ORD_ID) REFERENCES sdb_order(ORD_ID)
);

-- 14
CREATE TABLE SDB_BILLING(
    BIL_ID INT(3) NOT NULL AUTO_INCREMENT,
    ORD_ID INT(3),
    BIL_SERIE VARCHAR(10),
    BIL_NUMBER INT(10),
    CONSTRAINT PK_BIL_ID PRIMARY KEY (BIL_ID),
    CONSTRAINT FK_ORDBI_ID FOREIGN KEY (ORD_ID) REFERENCES SDB_ORDER(ORD_ID)
);

-- 15 NUEVO CITAS
CREATE TABLE SDB_DATE(
	DAT_ID INT(3) NOT NULL AUTO_INCREMENT,
    CUS_ID INT(3),
    EMP_ID INT(3),
    DAT_DATE DATE,
    DAT_DESCRIPTION VARCHAR(64),
    CONSTRAINT PK_DAT_ID PRIMARY KEY (DAT_ID),
    CONSTRAINT FK_CUSD_ID FOREIGN KEY (CUS_ID) REFERENCES sdb_customer(CUS_ID),
    CONSTRAINT FK_EMPD_ID FOREIGN KEY (EMP_ID) REFERENCES SDB_EMPLOYEE(EMP_ID)
);

-- 16 AUDIT
CREATE TABLE auditaremple (
    AUD_ID INT NOT NULL AUTO_INCREMENT,
    AUD_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    AUD_MODIFIED_BY VARCHAR(64),
    AUD_TABLE_AFFECTED VARCHAR(100),
    AUD_MOVE VARCHAR(64),
    PRIMARY KEY (aud_ID)
);
